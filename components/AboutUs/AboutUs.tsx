/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { styled } from '@mui/material/styles';
import { AboutUsProps } from 'types';
import useAboutUs from 'components/AboutUs/useAboutUs';

const ScreenDesktop: any = styled('div')({
  backgroundColor: `rgba(23, 23, 23, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
  height: 'auto',
});

const Sec2: any = styled('header')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px 0px 60px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
});

const Sec2Container: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `0px 80px 30px 80px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px 30px 30px 30px`
      : `0px 180px 30px 180px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'ScreenTablet'
      ? 'unset'
      : data.currentVariant === 'ScreenMobile'
      ? 'unset'
      : `1440px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'ScreenTablet'
      ? `stretch`
      : data.currentVariant === 'ScreenMobile'
      ? `stretch`
      : 'unset',
}));

const SecHolder: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `30px 0px 100px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Sec2Text: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `70px 0px 0px 0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const SecBlur: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `30px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `40px 10px 0px 0px`
      : data.currentVariant === 'ScreenMobile'
      ? `40px 10px 0px 0px`
      : `40px 10px 0px 40px`,
  boxSizing: `border-box`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'ScreenTablet'
      ? `stretch`
      : data.currentVariant === 'ScreenMobile'
      ? `stretch`
      : 'unset',
}));

const Subtitle: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon: any = styled('img')({
  height: `14px`,
  width: `14px`,
  margin: `0px`,
});

const AboutUs1: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  margin: `0px 0px 0px 8px`,
});

const LargeTxt: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'ScreenTablet'
      ? 'unset'
      : data.currentVariant === 'ScreenMobile'
      ? 'unset'
      : `787px`,
  margin: `18px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'ScreenTablet'
      ? `stretch`
      : data.currentVariant === 'ScreenMobile'
      ? `stretch`
      : 'unset',
}));

const Title: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const EveryTeam: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreenMobile' ? `34px` : `48px`,
  letterSpacing: `-1.5px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreenMobile' ? `36px` : `50px`,
  textTransform: `none`,
  width: data.currentVariant === 'ScreenMobile' ? `305px` : `657px`,
  margin: `0px`,
}));

const VeryBest: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreenMobile' ? `34px` : `48px`,
  letterSpacing: `-1.5px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreenMobile' ? `40px` : `50px`,
  textTransform: `none`,
  background: `linear-gradient(-90deg, rgba(138, 114, 255, 1) 27.16229514331244%, rgba(250, 191, 191, 1) 97.86200295926109%)`,
  backgroundClip: `text`,
  WebkitBackgroundClip: `text`,
  WebkitTextFillColor: `transparent`,
  margin: data.currentVariant === 'ScreenMobile' ? `-4px 0px 0px 0px` : `0px`,
}));

const FrontEndSubtitle: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'ScreenTablet'
      ? `20px`
      : data.currentVariant === 'ScreenMobile'
      ? `16px`
      : `24px`,
  letterSpacing:
    data.currentVariant === 'ScreenTablet'
      ? `0px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px`
      : `0.09090909361839294px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'ScreenTablet'
      ? `30px`
      : data.currentVariant === 'ScreenMobile'
      ? `22px`
      : `34px`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'ScreenTablet'
      ? `18px 0px 0px 0px`
      : data.currentVariant === 'ScreenMobile'
      ? `18px 0px 0px 0px`
      : `24px 0px 0px 0px`,
}));

const WeBelieveTxt: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `60px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: `18px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'ScreenTablet'
      ? `stretch`
      : data.currentVariant === 'ScreenMobile'
      ? `stretch`
      : 'unset',
}));

const WeBelieveDesktop: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: data.currentVariant === 'ScreenMobile' ? `10px 0px 0px 0px` : `0px`,
}));

const WeBelieve: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreenTablet' ? `34px` : `40px`,
  letterSpacing: data.currentVariant === 'ScreenTablet' ? `-0.51px` : `0px`,
  textDecoration: `none`,
  lineHeight: `50px`,
  textTransform: `none`,
  margin: `0px`,
}));

const WeBelieve1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreenTablet' ? `34px` : `40px`,
  letterSpacing: data.currentVariant === 'ScreenTablet' ? `-0.51px` : `-1px`,
  textDecoration: `none`,
  lineHeight: `50px`,
  textTransform: `none`,
  background:
    data.currentVariant === 'ScreenTablet'
      ? `linear-gradient(-90deg, rgba(138, 114, 255, 1) 27.16229514331244%, rgba(250, 191, 191, 1) 97.86200295926109%)`
      : `linear-gradient(-90deg, rgba(138, 114, 255, 1) 27.162295143312438%, rgba(250, 191, 191, 1) 97.86200295926109%)`,
  backgroundClip: `text`,
  WebkitBackgroundClip: `text`,
  WebkitTextFillColor: `transparent`,
  margin:
    data.currentVariant === 'ScreenTablet'
      ? `0px 0px 0px 8px`
      : `0px 0px 0px 10px`,
}));

const WeBelieveMobile: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: data.currentVariant === 'ScreenMobile' ? `0px` : `10px 0px 0px 0px`,
}));

const WeBelieve2: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: `27px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px`,
});

const Line2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `-1px 0px 0px 0px`,
});

const WeBelieve3: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: `27px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `none`,
  margin: `0px`,
});

const Done: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: `27px`,
  letterSpacing: `-1px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `none`,
  background: `linear-gradient(-90deg, rgba(138, 114, 255, 1) 27.16229514331245%, rgba(250, 191, 191, 1) 97.86200295926109%)`,
  backgroundClip: `text`,
  WebkitBackgroundClip: `text`,
  WebkitTextFillColor: `transparent`,
  margin: `0px 0px 0px 5px`,
});

const Bullet: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: data.currentVariant === 'ScreenMobile' ? `flex-start` : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `10px 0px 0px 0px`,
}));

const BulletMoved: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'ScreenMobile'
      ? `6px 0px 0px 0px`
      : `2px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
}));

const Dot: any = styled('img')({
  height: `11px`,
  width: `11px`,
  margin: `0px`,
});

const BulletTxt: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'ScreenTablet'
      ? `20px`
      : data.currentVariant === 'ScreenMobile'
      ? `16px`
      : `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'ScreenTablet'
      ? `26px`
      : data.currentVariant === 'ScreenMobile'
      ? `22px`
      : `34px`,
  textTransform: `none`,
  margin: `0px 0px 0px 14px`,
  flexGrow:
    data.currentVariant === 'ScreenTablet'
      ? `1`
      : data.currentVariant === 'ScreenMobile'
      ? `1`
      : 'unset',
}));

const Bullet1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'ScreenTablet'
      ? `flex-start`
      : data.currentVariant === 'ScreenMobile'
      ? `flex-start`
      : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `10px 0px 0px 0px`,
}));

const BulletMoved1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `9px 0px 0px 0px`
      : data.currentVariant === 'ScreenMobile'
      ? `7px 0px 0px 0px`
      : `2px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
}));

const Dot1: any = styled('img')({
  height: `11px`,
  width: `11px`,
  margin: `0px`,
});

const BulletTxt1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'ScreenTablet'
      ? `20px`
      : data.currentVariant === 'ScreenMobile'
      ? `16px`
      : `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'ScreenTablet'
      ? `26px`
      : data.currentVariant === 'ScreenMobile'
      ? `22px`
      : `34px`,
  textTransform: `none`,
  margin: `0px 0px 0px 14px`,
  flexGrow:
    data.currentVariant === 'ScreenTablet'
      ? `1`
      : data.currentVariant === 'ScreenMobile'
      ? `1`
      : 'unset',
}));

const Bullet2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `10px 0px 0px 0px`,
});

const BulletMoved2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `9px 0px 0px 0px`
      : data.currentVariant === 'ScreenMobile'
      ? `7px 0px 0px 0px`
      : `12px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: `0px`,
}));

const Dot2: any = styled('img')({
  height: `11px`,
  width: `11px`,
  margin: `0px`,
});

const BulletTxt2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize:
    data.currentVariant === 'ScreenTablet'
      ? `20px`
      : data.currentVariant === 'ScreenMobile'
      ? `16px`
      : `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'ScreenTablet'
      ? `26px`
      : data.currentVariant === 'ScreenMobile'
      ? `22px`
      : `34px`,
  textTransform: `none`,
  flexGrow: `1`,
  margin: `0px 0px 0px 14px`,
}));

const HeroBg: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(newassets/images/AboutUs_heroBG.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `0px 0px 30px 0px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px 0px 30px 0px`
      : `0px 0px 60px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
}));

const Sec1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `0px 80px 30px 80px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px 30px 30px 30px`
      : `0px 180px 30px 180px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'ScreenTablet'
      ? 'unset'
      : data.currentVariant === 'ScreenMobile'
      ? 'unset'
      : `1440px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'ScreenTablet'
      ? `stretch`
      : data.currentVariant === 'ScreenMobile'
      ? `stretch`
      : 'unset',
}));

const SecHolder1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `100px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Sec1Text: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `70px 0px 0px 0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const SecBlurDesktop: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  background:
    data.currentVariant === 'ScreenMobile'
      ? `linear-gradient(180deg, rgba(0, 0, 0, 0.61) 34.374999999999986%, rgba(0, 0, 0, 0) 99.99999999999999%)`
      : `linear-gradient(180deg, rgba(0, 0, 0, 0.61) 34.374999999999986%, rgba(0, 0, 0, 0) 99.99999999999997%)`,
  backdropFilter: `blur(84px)`,
  WebkitBackdropFilter: `blur(84px)`,
  borderRadius: `30px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `40px 0px 6px 40px`
      : data.currentVariant === 'ScreenMobile'
      ? `40px 0px 6px 40px`
      : `40px 0px 2px 40px`,
  boxSizing: `border-box`,
  margin: data.currentVariant === 'ScreenMobile' ? `18px 0px 0px 0px` : `0px`,
}));

const Subtitle1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon1: any = styled('img')({
  height: `14px`,
  width: `14px`,
  margin: `0px`,
});

const AboutUs2: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: `417px`,
  margin: `0px 0px 0px 8px`,
});

const LargeTxt1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `0px 0px 38px 0px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px`
      : `0px 0px 40px 0px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'ScreenTablet'
      ? 'unset'
      : data.currentVariant === 'ScreenMobile'
      ? 'unset'
      : `730px`,
  margin: `18px 0px 0px 0px`,
}));

const Q1Line: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const A: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'ScreenTablet'
      ? `36px`
      : data.currentVariant === 'ScreenMobile'
      ? `30px`
      : `48px`,
  letterSpacing:
    data.currentVariant === 'ScreenTablet'
      ? `-1.199582815170288px`
      : data.currentVariant === 'ScreenMobile'
      ? `-1.199582815170288px`
      : `-1.5px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'ScreenTablet'
      ? `38px`
      : data.currentVariant === 'ScreenMobile'
      ? `38px`
      : `50px`,
  textTransform: `none`,
  margin: `0px`,
}));

const Passionate: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'ScreenTablet'
      ? `36px`
      : data.currentVariant === 'ScreenMobile'
      ? `30px`
      : `48px`,
  letterSpacing:
    data.currentVariant === 'ScreenTablet'
      ? `-1.199582815170288px`
      : data.currentVariant === 'ScreenMobile'
      ? `-1.199582815170288px`
      : `-1.5px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'ScreenTablet'
      ? `38px`
      : data.currentVariant === 'ScreenMobile'
      ? `38px`
      : `50px`,
  textTransform: `none`,
  background:
    data.currentVariant === 'ScreenTablet'
      ? `linear-gradient(-90deg, rgba(138, 114, 255, 1) 27.16229514331244%, rgba(250, 191, 191, 1) 97.8620029592611%)`
      : data.currentVariant === 'ScreenMobile'
      ? `linear-gradient(-90deg, rgba(138, 114, 255, 1) 27.16229514331244%, rgba(250, 191, 191, 1) 97.8620029592611%)`
      : `linear-gradient(-90deg, rgba(138, 114, 255, 1) 27.162295143312438%, rgba(250, 191, 191, 1) 97.86200295926109%)`,
  backgroundClip: `text`,
  WebkitBackgroundClip: `text`,
  WebkitTextFillColor: `transparent`,
  margin: `0px 0px 0px 7px`,
}));

const Group: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'ScreenTablet'
      ? `36px`
      : data.currentVariant === 'ScreenMobile'
      ? `30px`
      : `48px`,
  letterSpacing:
    data.currentVariant === 'ScreenTablet'
      ? `-1.199582815170288px`
      : data.currentVariant === 'ScreenMobile'
      ? `-1.199582815170288px`
      : `-1.5px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'ScreenTablet'
      ? `38px`
      : data.currentVariant === 'ScreenMobile'
      ? `38px`
      : `50px`,
  textTransform: `none`,
  margin: `0px 0px 0px 7px`,
}));

const Builders: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'ScreenTablet'
      ? `36px`
      : data.currentVariant === 'ScreenMobile'
      ? `30px`
      : `48px`,
  letterSpacing:
    data.currentVariant === 'ScreenTablet'
      ? `-1.5994436740875244px`
      : data.currentVariant === 'ScreenMobile'
      ? `-1.5994436740875244px`
      : `-2px`,
  textDecoration: `none`,
  lineHeight:
    data.currentVariant === 'ScreenTablet'
      ? `38px`
      : data.currentVariant === 'ScreenMobile'
      ? `38px`
      : `50px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'ScreenTablet'
      ? `529px`
      : data.currentVariant === 'ScreenMobile'
      ? `529px`
      : `719px`,
  margin: `2px 0px 0px 0px`,
}));

const SecBlurMobile: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  background: `linear-gradient(180deg, rgba(0, 0, 0, 0.61) 34.37499999999999%, rgba(0, 0, 0, 0) 99.99999999999999%)`,
  backdropFilter: `blur(84px)`,
  WebkitBackdropFilter: `blur(84px)`,
  borderRadius: `30px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `40px 0px 16px 30px`,
  boxSizing: `border-box`,
  width: `315px`,
  margin: data.currentVariant === 'ScreenMobile' ? `0px` : `18px 0px 0px 0px`,
}));

const Subtitle2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon2: any = styled('img')({
  height: `14px`,
  width: `14px`,
  margin: `0px`,
});

const AboutUs3: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `uppercase`,
  width: `417px`,
  margin: `0px 0px 0px 8px`,
});

const LargeTxt2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: data.currentVariant === 'ScreenMobile' ? `0px 0px 20px 0px` : `0px`,
  boxSizing: `border-box`,
  margin: `18px 0px 0px 0px`,
}));

const Q1Line1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const A1: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: `30px`,
  letterSpacing: `-1.199582815170288px`,
  textDecoration: `none`,
  lineHeight: `32px`,
  textTransform: `none`,
  margin: `0px`,
});

const Passionate1: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: `30px`,
  letterSpacing: `-1.199582815170288px`,
  textDecoration: `none`,
  lineHeight: `32px`,
  textTransform: `none`,
  background: `linear-gradient(-90deg, rgba(138, 114, 255, 1) 27.16229514331244%, rgba(250, 191, 191, 1) 97.8620029592611%)`,
  backgroundClip: `text`,
  WebkitBackgroundClip: `text`,
  WebkitTextFillColor: `transparent`,
  margin: `0px 0px 0px 7px`,
});

const Group1: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: `30px`,
  letterSpacing: `-1.199582815170288px`,
  textDecoration: `none`,
  lineHeight: `32px`,
  textTransform: `none`,
  margin: `0px 0px 0px 7px`,
});

const Builders1: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: `30px`,
  letterSpacing: `-1.5994436740875244px`,
  textDecoration: `none`,
  lineHeight: `32px`,
  textTransform: `none`,
  width: `267px`,
  margin: `0px`,
});

const Sec3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `26px 0px`
      : data.currentVariant === 'ScreenMobile'
      ? `26px 0px`
      : `26px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
}));

const Sec3Container: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `0px 80px 80px 80px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px 30px 80px 30px`
      : `0px 180px 30px 180px`,
  boxSizing: `border-box`,
  width:
    data.currentVariant === 'ScreenTablet'
      ? 'unset'
      : data.currentVariant === 'ScreenMobile'
      ? 'unset'
      : `1440px`,
  margin: `0px`,
  alignSelf:
    data.currentVariant === 'ScreenTablet'
      ? `stretch`
      : data.currentVariant === 'ScreenMobile'
      ? `stretch`
      : 'unset',
}));

const SecHolder2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `30px 0px`
      : data.currentVariant === 'ScreenMobile'
      ? `30px 0px`
      : `30px 0px 100px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Sec3Text: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `40px 0px 0px 0px`,
  boxSizing: `border-box`,
  flexGrow: `1`,
  margin: `0px`,
});

const SecBlur1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `30px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `40px 0px 0px 0px`
      : data.currentVariant === 'ScreenMobile'
      ? `40px 0px 0px 0px`
      : `40px 0px 0px 40px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Subtitle3: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const ActionsIcon3: any = styled('img')({
  height: `14px`,
  width: `14px`,
  margin: `0px`,
});

const OurTeam: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `700`,
  fontSize: `12px`,
  letterSpacing: `2px`,
  textDecoration: `none`,
  lineHeight: `30px`,
  textTransform: `none`,
  width: `417px`,
  margin: `0px 0px 0px 8px`,
});

const LargeTxt3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: data.currentVariant === 'ScreenTablet' ? 'unset' : `787px`,
  margin: `18px 0px 0px 0px`,
}));

const WereBetter: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreenMobile' ? `30px` : `48px`,
  letterSpacing: `-1.5px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreenMobile' ? `40px` : `50px`,
  textTransform: `none`,
  margin: `0px`,
}));

const WereBetter1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreenMobile' ? `30px` : `48px`,
  letterSpacing: `-1.5px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreenMobile' ? `40px` : `50px`,
  textTransform: `none`,
  background:
    data.currentVariant === 'ScreenMobile'
      ? `linear-gradient(-90deg, rgba(138, 114, 255, 1) 27.16229514331244%, rgba(250, 191, 191, 1) 97.86200295926109%)`
      : `linear-gradient(-90deg, rgba(138, 114, 255, 1) 27.16229514331245%, rgba(250, 191, 191, 1) 97.86200295926109%)`,
  backgroundClip: `text`,
  WebkitBackgroundClip: `text`,
  WebkitTextFillColor: `transparent`,
  margin:
    data.currentVariant === 'ScreenMobile'
      ? `0px 0px 0px 6px`
      : `0px 0px 0px 10px`,
}));

const WereBetter2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Articulat CF`,
  fontWeight: `700`,
  fontSize: data.currentVariant === 'ScreenMobile' ? `30px` : `48px`,
  letterSpacing: `-1.5px`,
  textDecoration: `none`,
  lineHeight: data.currentVariant === 'ScreenMobile' ? `40px` : `50px`,
  textTransform: `none`,
  margin:
    data.currentVariant === 'ScreenMobile'
      ? `0px 0px 0px 6px`
      : `0px 0px 0px 10px`,
}));

const Cards: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection:
    data.currentVariant === 'ScreenTablet'
      ? `column`
      : data.currentVariant === 'ScreenMobile'
      ? `column`
      : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `22px 0px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `18px 0px 0px 0px`,
}));

const Card: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  border: `2px solid rgba(88, 88, 88, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `40px 20px`
      : data.currentVariant === 'ScreenMobile'
      ? `40px 20px`
      : `40px 8px`,
  alignSelf: `stretch`,
  flexGrow:
    data.currentVariant === 'ScreenTablet'
      ? 'unset'
      : data.currentVariant === 'ScreenMobile'
      ? 'unset'
      : `1`,
  margin: `0px`,
}));

const Form: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 20px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const StatIcon: any = styled('img')({
  height: `76px`,
  width: `76px`,
  margin: `0px`,
});

const BtmTxt: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `11px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: `14px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'ScreenTablet'
      ? `stretch`
      : data.currentVariant === 'ScreenMobile'
      ? `stretch`
      : 'unset',
}));

const Title1: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: `24px`,
  letterSpacing: `1px`,
  textDecoration: `none`,
  lineHeight: `34px`,
  textTransform: `none`,
  width: `270.67px`,
  margin: `0px`,
});

const BulletTxt3: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'ScreenTablet'
      ? 'unset'
      : data.currentVariant === 'ScreenMobile'
      ? 'unset'
      : `270.67px`,
  margin: `8px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'ScreenTablet'
      ? `stretch`
      : data.currentVariant === 'ScreenMobile'
      ? `stretch`
      : 'unset',
}));

const Card1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  border: `2px solid rgba(88, 88, 88, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `40px 20px`
      : data.currentVariant === 'ScreenMobile'
      ? `40px 20px`
      : `40px 8px`,
  alignSelf: `stretch`,
  flexGrow:
    data.currentVariant === 'ScreenTablet'
      ? 'unset'
      : data.currentVariant === 'ScreenMobile'
      ? 'unset'
      : `1`,
  margin:
    data.currentVariant === 'ScreenTablet'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'ScreenMobile'
      ? `30px 0px 0px 0px`
      : `0px 0px 0px 30px`,
}));

const Form1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 20px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const StatIcon1: any = styled('img')({
  height: `76px`,
  width: `76px`,
  margin: `0px`,
});

const BtmTxt1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `11px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: `14px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'ScreenTablet'
      ? `stretch`
      : data.currentVariant === 'ScreenMobile'
      ? `stretch`
      : 'unset',
}));

const Title2: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: `24px`,
  letterSpacing: `1px`,
  textDecoration: `none`,
  lineHeight: `34px`,
  textTransform: `none`,
  width: `270.67px`,
  margin: `0px`,
});

const BulletTxt4: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'ScreenTablet'
      ? 'unset'
      : data.currentVariant === 'ScreenMobile'
      ? 'unset'
      : `270.67px`,
  margin: `8px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'ScreenTablet'
      ? `stretch`
      : data.currentVariant === 'ScreenMobile'
      ? `stretch`
      : 'unset',
}));

const Card2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  border: `2px solid rgba(88, 88, 88, 1)`,
  boxSizing: `border-box`,
  borderRadius: `12px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'ScreenTablet'
      ? `40px 20px`
      : data.currentVariant === 'ScreenMobile'
      ? `40px 20px`
      : `40px 8px`,
  flexGrow:
    data.currentVariant === 'ScreenTablet'
      ? 'unset'
      : data.currentVariant === 'ScreenMobile'
      ? 'unset'
      : `1`,
  margin:
    data.currentVariant === 'ScreenTablet'
      ? `30px 0px 0px 0px`
      : data.currentVariant === 'ScreenMobile'
      ? `30px 0px 0px 0px`
      : `0px 0px 0px 30px`,
  alignSelf:
    data.currentVariant === 'ScreenTablet'
      ? `stretch`
      : data.currentVariant === 'ScreenMobile'
      ? `stretch`
      : 'unset',
}));

const Form2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 20px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const StatIcon2: any = styled('img')({
  height: `76px`,
  width: `76px`,
  margin: `0px`,
});

const BtmTxt2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `11px 0px 0px 0px`,
  boxSizing: `border-box`,
  margin: `16px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'ScreenTablet'
      ? `stretch`
      : data.currentVariant === 'ScreenMobile'
      ? `stretch`
      : 'unset',
}));

const Title3: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `800`,
  fontSize: `24px`,
  letterSpacing: `1px`,
  textDecoration: `none`,
  lineHeight: `34px`,
  textTransform: `none`,
  width: `270.67px`,
  margin: `0px`,
});

const BulletTxt5: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: `rgba(255, 255, 255, 1)`,
  fontStyle: `normal`,
  fontFamily: `Visby CF`,
  fontWeight: `600`,
  fontSize: `18px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `26px`,
  textTransform: `none`,
  width:
    data.currentVariant === 'ScreenTablet'
      ? 'unset'
      : data.currentVariant === 'ScreenMobile'
      ? 'unset'
      : `270.67px`,
  margin: `8px 0px 0px 0px`,
  alignSelf:
    data.currentVariant === 'ScreenTablet'
      ? `stretch`
      : data.currentVariant === 'ScreenMobile'
      ? `stretch`
      : 'unset',
}));

function AboutUs(props: AboutUsProps): JSX.Element {
  const { data } = useAboutUs();

  return (
    <ScreenDesktop>
      <Sec2>
        <Sec2Container data={data}>
          <SecHolder>
            <Sec2Text>
              <SecBlur data={data}>
                <Subtitle>
                  <ActionsIcon
                    src={`newassets/images/AboutUs_Actions_Icon.png`}
                    loading="lazy"
                    alt={'Actions Icon'}
                  />
                  <AboutUs1>{`OUR MISSION`}</AboutUs1>
                </Subtitle>
                <LargeTxt data={data}>
                  <Title>
                    <EveryTeam data={data}>
                      {`Empower every team, big or small, to build their very best `}
                    </EveryTeam>
                    <VeryBest data={data}>{`software product.`}</VeryBest>
                  </Title>
                  <FrontEndSubtitle data={data}>
                    {`The process of building a software application has stayed the same for the past many years or even decades. Yes, we have better tools for collaboration, deploying, hosting and serving, and more standardized frameworks for data sharing. But at the core, software is built by hand-coding everything - even the most tedious, time consuming, repetitive aspects as in frontend development.`}
                  </FrontEndSubtitle>
                </LargeTxt>
                <WeBelieveTxt data={data}>
                  {!(data.currentVariant === 'ScreenMobile') && (
                    <WeBelieveDesktop data={data}>
                      <WeBelieve data={data}>
                        {`We believe that it can be done`}
                      </WeBelieve>
                      <WeBelieve1 data={data}>{`better:`}</WeBelieve1>
                    </WeBelieveDesktop>
                  )}
                  {data.currentVariant === 'ScreenMobile' && (
                    <WeBelieveMobile data={data}>
                      <WeBelieve2>{`We believe that it can`}</WeBelieve2>
                      <Line2>
                        <WeBelieve3>{`be done`}</WeBelieve3>
                        <Done>{`better:`}</Done>
                      </Line2>
                    </WeBelieveMobile>
                  )}
                  <Bullet data={data}>
                    <BulletMoved data={data}>
                      <Dot
                        src={`newassets/images/AboutUs_dot.png`}
                        loading="lazy"
                        alt={'dot'}
                      />
                    </BulletMoved>
                    <BulletTxt data={data}>
                      {`Building a software application does not have to be tedious`}
                    </BulletTxt>
                  </Bullet>
                  <Bullet1 data={data}>
                    <BulletMoved1 data={data}>
                      <Dot1
                        src={`newassets/images/AboutUs_dot_1.png`}
                        loading="lazy"
                        alt={'dot'}
                      />
                    </BulletMoved1>
                    <BulletTxt1 data={data}>
                      {`Automation through code generation can make developers highly productive`}
                    </BulletTxt1>
                  </Bullet1>
                  <Bullet2>
                    <BulletMoved2 data={data}>
                      <Dot2
                        src={`newassets/images/AboutUs_dot_2.png`}
                        loading="lazy"
                        alt={'dot'}
                      />
                    </BulletMoved2>
                    <BulletTxt2 data={data}>
                      {`Developers can fully be in control and get the best of both worlds - automation when needed and custom-coding where necessary
`}
                    </BulletTxt2>
                  </Bullet2>
                </WeBelieveTxt>
              </SecBlur>
            </Sec2Text>
          </SecHolder>
        </Sec2Container>
      </Sec2>
      <HeroBg data={data}>
        <Sec1 data={data}>
          <SecHolder1>
            <Sec1Text>
              {!(data.currentVariant === 'ScreenMobile') && (
                <SecBlurDesktop data={data}>
                  <Subtitle1>
                    <ActionsIcon1
                      src={`newassets/images/AboutUs_Actions_Icon_1.png`}
                      loading="lazy"
                      alt={'Actions Icon'}
                    />
                    <AboutUs2>{`WE ARE`}</AboutUs2>
                  </Subtitle1>
                  <LargeTxt1 data={data}>
                    <Q1Line>
                      <A data={data}>{`A`}</A>
                      <Passionate data={data}>{`passionate`}</Passionate>
                      <Group data={data}>{`group of product`}</Group>
                    </Q1Line>
                    <Builders data={data}>
                      {data.currentVariant === 'ScreenMobile'
                        ? `builders from all over the world striving to build the future of frontend development.
`
                        : `builders from all over the world striving to build the future of frontend development.`}
                    </Builders>
                  </LargeTxt1>
                </SecBlurDesktop>
              )}
              {data.currentVariant === 'ScreenMobile' && (
                <SecBlurMobile data={data}>
                  <Subtitle2>
                    <ActionsIcon2
                      src={`newassets/images/AboutUs_Actions_Icon_2.png`}
                      loading="lazy"
                      alt={'Actions Icon'}
                    />
                    <AboutUs3>{`WE ARE`}</AboutUs3>
                  </Subtitle2>
                  <LargeTxt2 data={data}>
                    <Q1Line1>
                      <A1>{`A`}</A1>
                      <Passionate1>{`passionate`}</Passionate1>
                      <Group1>{`group `}</Group1>
                    </Q1Line1>
                    <Builders1>
                      {data.currentVariant === 'ScreenMobile'
                        ? `of product builders from all over the world striving to build the future of frontend development.`
                        : `of product builders from all over the world striving to build the future of frontend development.
`}
                    </Builders1>
                  </LargeTxt2>
                </SecBlurMobile>
              )}
            </Sec1Text>
          </SecHolder1>
        </Sec1>
      </HeroBg>
      <Sec3 data={data}>
        <Sec3Container data={data}>
          <SecHolder2 data={data}>
            <Sec3Text>
              <SecBlur1 data={data}>
                <Subtitle3>
                  <ActionsIcon3
                    src={`newassets/images/AboutUs_Actions_Icon_3.png`}
                    loading="lazy"
                    alt={'Actions Icon'}
                  />
                  <OurTeam>{`WE VALUE`}</OurTeam>
                </Subtitle3>
                <LargeTxt3 data={data}>
                  <WereBetter data={data}>{`What we`}</WereBetter>
                  <WereBetter1 data={data}>{`care`}</WereBetter1>
                  <WereBetter2 data={data}>{`about`}</WereBetter2>
                </LargeTxt3>
                <Cards data={data}>
                  <Card data={data}>
                    <Form>
                      <StatIcon
                        src={`newassets/images/AboutUs_stat_icon.png`}
                        loading="lazy"
                        alt={'stat_icon'}
                      />
                      <BtmTxt data={data}>
                        <Title1>{`Trust `}</Title1>
                        <BulletTxt3 data={data}>
                          {`We earn our customers’ trust by truly making a difference in their lives. Our customers use Quest to build products that they deeply care about. So we will do everything we can to help them in their missions.
`}
                        </BulletTxt3>
                      </BtmTxt>
                    </Form>
                  </Card>
                  <Card1 data={data}>
                    <Form1>
                      <StatIcon1
                        src={`newassets/images/AboutUs_stat_icon_1.png`}
                        loading="lazy"
                        alt={'stat_icon'}
                      />
                      <BtmTxt1 data={data}>
                        <Title2>{`Empowerment`}</Title2>
                        <BulletTxt4 data={data}>
                          {`At our core, Quest is about enabling everyone to build vastly superior software applications irrespective of how big you are or how many engineers are on your team.`}
                        </BulletTxt4>
                      </BtmTxt1>
                    </Form1>
                  </Card1>
                  <Card2 data={data}>
                    <Form2>
                      <StatIcon2
                        src={`newassets/images/AboutUs_stat_icon_2.png`}
                        loading="lazy"
                        alt={'stat_icon'}
                      />
                      <BtmTxt2 data={data}>
                        <Title3>{`Giving back`}</Title3>
                        <BulletTxt5 data={data}>
                          {`A core tenet of our team is to share our blessings with our community. As part of our 1% Pledge, we donate 1% of our revenues to various charities and community organizations globally. In addition, our program for Early Stage Startups and Educators helps build the next generation of innovators through generous access to Quest technology.`}
                        </BulletTxt5>
                      </BtmTxt2>
                    </Form2>
                  </Card2>
                </Cards>
              </SecBlur1>
            </Sec3Text>
          </SecHolder2>
        </Sec3Container>
      </Sec3>
    </ScreenDesktop>
  );
}

export default AboutUs;
